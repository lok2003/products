<!DOCTYPE html>
<html lang="en">
   <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>fetch multi users</title>
      <style>
         #product{
         display: grid;
         grid-template-columns:  repeat(auto-fit,minmax(250px,1fr));
         gap: 10px;
         padding: 15px;
         width: 60%;
         } 
         .product-card{
         border: 1px solid #cddcdd;
         padding: 15px;
         text-align: center;
         background-color: rgb(236, 236, 109);
         box-shadow:  2px 2px 3px rgba(0,1,1,0.6);
         }
         .product-card img{
         height: 100px;
         width: 100px;
         margin: 10px;
         border-radius: 5px;
         }
         .product-card img:hover{
         transform: translateY(-10px);
         }
         .product-card h3,p{
         color: blue;
         font-size: 1.6em;
         }
         .product-card button{
         background-color: green;
         color: #fff;
         font-size: 1.3em;
         border-radius: 10px;
         border: none;
         padding: 10px;
         align-items: center;
         }
         .product-card button:hover{
         background-color: #fff;
         color: green;
         }
         table{
         border-collapse: collapse;
         text-align: center;
         margin: 3px;
         padding: 6px;
         font-size: 1.4em;
         }
         th{
         background-color: beige;
         color: blue;
         }
         tr:nth-child(even){
         background-color: #cddcdd;
         }
         tr:hover{
         background-color: rgb(99, 231, 231);
         }
         td:hover{
         background-color: bisque;
         }
         button{
         background-color: rgb(148, 24, 24);
         color: white;
         font-size: 1.5em;
         border: none;
         border-radius: 10px;
         margin: 5px;  
         cursor: pointer;
         }
         button:hover{
         background-color: rgb(253, 2, 2);
         }
         button[type=submit]{
         background-color: rgb(40, 250, 3);
         font-size: 1.3em;
         border-radius: 10px;
         cursor: pointer;
         }
         #cartproduct {
         width: 90%;
         margin: 30px auto;
         background-color: #f5faff;
         padding: 20px;
         border: 2px solid #a3d3f5;
         border-radius: 10px;
         box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);
         font-family: Arial, sans-serif;
         }
         #cartproduct table {
         width: 100%;
         border-collapse: collapse;
         font-size: 1em;
         }
         #cartproduct th, 
         #cartproduct td {
         padding: 10px;
         border: 1px solid #d4e2f0;
         text-align: center;
         }
         #cartproduct th {
         background-color: #d9f0ff;
         color: #045d75;
         font-weight: bold;
         }
         #cartproduct tr:nth-child(even) {
         background-color: #f1faff;
         }
         #cartproduct img {
         height: 50px;
         width: 50px;
         object-fit: contain;
         border-radius: 5px;
         }
         #cartproduct button {
         padding: 5px 10px;
         font-size: 1em;
         border: none;
         border-radius: 5px;
         cursor: pointer;
         }
         #cartproduct button:hover {
         opacity: 0.9;
         }
         #cartproduct button[onclick^="updateCartQuantity"] {
         background-color: #4caf50;
         color: white;
         }
         #cartproduct button[onclick^="removeFromCart"] {
         background-color: #f44336;
         color: white;
         }
      </style>
   </head>
   <body>
      <div>
         <input type="number" name="id" id="ID" placeholder="ID" disabled/>
         <input type="text" name="name" id="name" placeholder="name"/>
         <input type="email" name="email" id="emailid" placeholder="email-id"/>
         <input type="text" name="address" id="adss" placeholder="Address"/>
         <input type="tel" name="phone" id="phoneno" placeholder="Phone number" maxlength="10" pattern="[0-9]{10}"/>
         <button type="submit">add</button>
      </div>
      <div id="product"></div>
      <div id="users"></div>
      <div id="cartproduct"></div>
      <!-- <button onclick="printCart()">Print Cart</button>-->
      <script>
         let userlist = [];
         let productlist = [];
         let cartlist = [];
         async function fetchRam(url){
             const response =  await fetch(url);
             if(!response.ok){
                 throw new Error (`something went wrong`)
             }
             let data = await response.json();
             return data
         }
         
          window.onload =async function()
          
          {
             try{
              productlist = await fetchRam("https://fakestoreapi.com/products");
              userlist =await fetchRam("https://fakestoreapi.com/users")
             //console.log(productlist);
            // console.log(userlist);
              displayUsers(userlist);
               displayProducts(productlist)
               displayCart()
         }
         catch(error){
            console.log(error)
         }
         }
          
         function displayUsers(userlist){
             let eleuser =  document.querySelector("#users");//console.log(eleuser)
             eleuser.innerHTML= "";
             let tables =  document.createElement("table");
             tables.border = "1"
             tables.width = "100%";
             const header = tables.insertRow();
             header.innerHTML = `<th>ID</th>
                                  <th>NAME</th>
                                  <th>EMAIL ID</th>
                                  <th>ADDRESS</th>
                                  <th>PHONE</th>
                                  <th>Action</th>`;
         
              userlist.forEach((a,b)=>{
                 const row = tables.insertRow();
                 row.innerHTML = `<td>${a.id} </td>
                                 <td>${a.name.firstname} </td>
                                 <td>${a.email} </td>
                                 <td>${a.address.city} </td>
                                 <td>${a.phone} </td>
                                 <td>
                                     <button onclick="editUser(${b})">EDIT</button>
                                     <button onclick="deleteUser(${b})">DELETE</button></td>`
                                     
              })
              eleuser.appendChild(tables) 
         }
         
         document.querySelector("button[type=submit]").addEventListener("click",(e)=>{
             e.preventDefault();
             //const id= document.querySelector("#ID").value.trim();
             const name = document.querySelector("#name").value.trim();
             const email = document.querySelector("#emailid").value.trim();
             const address = document.querySelector("#adss").value.trim();
             const phone = document.querySelector("#phoneno").value.trim();
             
             const newID = userlist.length > 0 ? Math.max(...userlist.map(user=>user.id)) +1:1;
             if( !name || !email || !address || !phone){
                 alert("fill all the fields");
                 return;
             }
         
             userlist.push({
                 id:newID,
                 name:{firstname:name},
                 email,
                 address:{city:address},
                 phone,
             });
             displayUsers(userlist);
             document.querySelectorAll("input").forEach(input=>input.value= "")
         });
         
          function deleteUser(b){
            // alert("are you sure to delete the data")
           if(confirm("Are you sure you want to delete this user?")){
             userlist.splice(b,1)
            displayUsers(userlist)
           }
         }
         
          function editUser(b){
                alert(`Edit user at index ${b+1}`);
                const currentName = userlist[b].name.firstname;
                const newName = prompt("Enter new name","");
                if(newName && newName.trim()!==""){
                 userlist[b].name.firstname = newName.trim();
                 displayUsers(userlist)
                }
                const currentEmail = userlist[b].email;
                const newEmail = prompt("enter new Email","")
                if(newEmail && newEmail.trim()!==""){
                 userlist[b].email = newEmail.trim();
                 displayUsers(userlist)
         
                }
          }
         
         function displayProducts(productList){
         let prod = document.querySelector("#product");//console.log(prod);
         prod.innerHTML = "";
          productList.forEach((c,d)=>{
             const card = document.createElement("div");
             card.className = "product-card";
             card.innerHTML = `
             <h3>${c.title}</h3>
             <img src = "${c.image}" alt="${c.title}"/>
             
             <p><b>$ ${c.price}</b></p>
             <button onclick="addtoCart(${d})">ADD TO CART</button>`             
           
           prod.appendChild(card)
         });
         }
         
         
          function addtoCart(d){
           /* const productList  = Array.from(document.querySelectorAll('#product.product-card')).map((card,index)=>{
              return {
                 title : card.querySelector('h3'),
                 image :card.querySelector('img').src,
                 price:parseFloat(card.querySelector('p b').textContent('$','')),
                 id:index + 1
              };
          }); */ 
             
          const slectedProduct = productlist[d];
          let found = false;
            for(let i = 0; i < cartlist.length; i ++){
                if(cartlist[i].id === slectedProduct.id){
                    cartlist[i].quantity++;
                    found = true;
                    break;
                }
            }
            if(!found){
                cartlist.push({...slectedProduct,
                    quantity:1
                });
            }
            displayCart()
          }
         
          function displayCart(){
            let cartEle = document.querySelector("#cartproduct");
            cartEle.innerHTML = "";
              if(cartlist.length === 0){
                cartEle.innerHTML = "<p>Your Cart is Empty</p>";
                return;
              }
         
              let tablecart = document.createElement("table");
              tablecart.border = "1";
              tablecart.width="100%";
              const header = tablecart.insertRow();
              header.innerHTML = `<th>Product</th>
                                  <th>Image</th>
                                   <th>Price</th>
                                   <th>Quantity</th>
                                   <th>Total</th>
                                   <th>Action</th>`;
         
             let totalCartPrice  = 0;
             let totalQuantity = 0;
             cartlist.forEach((item,index)=>{
                const row = tablecart.insertRow();
                const itemTotalPrice = item.price * item.quantity;
                totalCartPrice += itemTotalPrice;
                totalQuantity += item.quantity;
                row.innerHTML = `<td>${item.title}</td>                          
                                 <td> <img src ="${item.image}" alt="${item.title}" style="height:50px; width:50px"/></td>
                                <td>${item.price.toFixed(2)}</td>
                                    <td>
                                        <button onclick="updateCartQuantity(${index},-1)"> - </button>
                                        ${item.quantity}
                                        <button onclick= "updateCartQuantity(${index},1)">+</button>
                                    </td>
                                <td>$ ${itemTotalPrice.toFixed(2)}</td>
                                <td>
                                    <button onclick="removeFromCart(${index})">Remove</button></td>`
             });
             const totalRow = tablecart.insertRow();
             totalRow.innerHTML = `<td colspan = "3" style="text-align:right;"><b>Total</b></td>
                                     <td>${totalQuantity}</td>
                                    <td><b>$ ${totalCartPrice.toFixed(2)}</b></td>
                                    <td></td>`;
            cartEle.appendChild(tablecart)
          }
         
          function updateCartQuantity(index,change){
            if(cartlist[index]){
                cartlist[index].quantity += change;
                if(cartlist[index].quantity <=0){
                    cartlist.splice(index,1)
                } 
                displayCart();
            }
          }
         
          function removeFromCart(index){
            cartlist.splice(index,1);
            displayCart()
          }
      </script> 
   </body>
</html>
